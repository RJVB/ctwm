# Makefile generated by imake - do not edit!
# $XConsortium: imake.c /main/86 1995/08/01 14:42:23 gildea $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.227 95/05/05 17:42:07 kaleb Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.19 95/01/05 19:24:32 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit sgi.cf to change

# platform:  $XConsortium: sgi.cf,v 1.43 94/06/03 21:38:45 matt Exp $

# operating system:				IRIX

        OPTIMIZER =

           MANUSR = /usr/share/local

       CATMAN1DIR = $(MANUSR)/catman/u_man/cat1
       CATMAN3DIR = $(MANUSR)/catman/p_man/cat3
          MAN1DIR = $(MANUSR)/man/u_man/man1
          MAN3DIR = $(MANUSR)/man/p_man/man3

       MANPACKAGE = /X11

# $XConsortium: sgiLib.rules,v 1.8 93/09/11 17:59:30 rws Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.201 95/06/05 19:43:41 gildea Exp $

          PATHSEP = /
            SHELL = 	/bin/sh

              TOP = .
      CURRENT_DIR = .

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = /usr/include
        USRLIBDIR = /usr/lib
         SHLIBDIR = /usr/lib
        ISALIBDIR = /usr/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/share/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(CATMAN1DIR)$(MANPACKAGE)
        LIBMANDIR = $(CATMAN3DIR)$(MANPACKAGE)
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = $(TOOLROOT)/usr/bin/ar cq
  BOOTSTRAPCFLAGS = $(OPTIMIZER)
               CC = gccopt
               AS = $(TOOLROOT)/usr/bin/as

.SUFFIXES: .cxx

              CXX = CC
    CXXDEBUGFLAGS = $(OPTIMIZER)
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
  CXXIDL_INCLUDES = -I$(TOP)/include
   CXXSTD_DEFINES = -DSYSV -DSVR4 -nostdinc -I$(ROOT)/usr/include
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES) $(CXXIDL_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = $(TOOLROOT)/usr/bin/cc -E $(STD_CPP_DEFINES)
          INSTALL = bsdinst
     INSTALLFLAGS = -c
               LD = $(TOOLROOT)/usr/bin/ld
              LEX = lex
           LEXLIB = -ll
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -bh
               LN = ln -s

               MV = mv
               CP = cp

               RM = rm -f
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 4
            TROFF = psroff -t
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES = -nostdinc -I$(ROOT)/usr/include
  STD_CPP_DEFINES = -DSYSV -DSVR4
      STD_DEFINES = -DSYSV -DSVR4
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

    PROTO_DEFINES = -DFUNCPROTO=7 -DNARROWPROTO

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 2755 -g sys

      CDEBUGFLAGS = $(OPTIMIZER)
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB =
        LDPOSTLIB = -L$(ROOT)$(SHLIBDIR)/mips2 -L$(ROOT)$(SHLIBDIR)
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = sgi.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			$(IRULESRC)/host.def $(EXTRA_ICONFIGFILES)

# -----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XConsortium: Project.tmpl,v 1.248 95/01/06 19:12:51 gildea Exp $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

           BINDIR = /usr/bin/X11
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
      BUILDLIBDIR = $(TOP)/usrlib
      BUILDLIBTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = 			/var/X11/xdm
           TWMDIR = $(LIBDIR)/twm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(TOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/programs/Xserver
       CONTRIBSRC = $(TOP)/../contrib
   UNSUPPORTEDSRC = $(TOP)/unsupported
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(TOP)/include/fonts
        EXTINCSRC = $(TOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

# Supporting dynamic shared object libraries for IRIX 5.0

# These defines mimic what is in /usr/include/make/commondefs
# (Should be in sync with Revision 1.99)

       DSOREGFILE = $$ROOT$(SHLIBDIR)/so_locations
      DSOSTARTOPT = -update_registry $(DSOREGFILE)
       DSONAMEOPT = -soname $@
       DSOVERSION = sgi1.0
    DSOVERSIONOPT = -set_version $(DSOVERSION)
        LDDSOOPTS = -32 -mips2 -shared -no_unresolved $(VLDDSOOPTS) \
  $(LLDDSOOPTS) $(GLDDSOOPTS)
       GLDDSOOPTS = -all $(DSOSTARTOPT) $(DSONAMEOPT) $(DSOVERSIONOPT)

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = .1
DEPXONLYLIB =  $(ROOT)$(SHLIBDIR)/libX11.so$(SOXLIBREV)
XONLYLIB =  -lX11

LINTXONLY =  $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV =
DEPEXTENSIONLIB =  $(ROOT)$(SHLIBDIR)/libXext.so$(SOXEXTREV)
EXTENSIONLIB =  -lXext

LINTEXTENSION =  $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB =  $(ROOT)$(SHLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH =  $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB =  $(ROOT)$(SHLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP =  $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV =
DEPXMULIB =  $(ROOT)$(SHLIBDIR)/libXmu.so$(SOXMUREV)
XMULIB =  -lXmu

LINTXMU =  $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

DEPOLDXLIB =  $(ROOT)$(SHLIBDIR)/liboldX.a
OLDXLIB =  -loldX

LINTOLDX =  $(LINTLIBDIR)/llib-loldX.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV =
DEPXTOOLONLYLIB =  $(ROOT)$(SHLIBDIR)/libXt.so$(SOXTREV)
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY =  $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = .2
DEPXAWLIB =  $(ROOT)$(SHLIBDIR)/libXaw.so$(SOXAWREV)
XAWLIB =  -lXaw

LINTXAW =  $(LINTLIBDIR)/llib-lXaw.ln

       XTFSRC = $(TOP)/workInProgress/Xtf

SOXTFREV = 0.7
DEPXTFLIB =  $(ROOT)$(SHLIBDIR)/libXtf.so$(SOXTFREV)
XTFLIB =  -lXtf

LINTXTF =  $(LINTLIBDIR)/llib-lXtf.ln

       FRESCOSRC = $(TOP)/workInProgress/Fresco

SOFRESCOREV = 0.7
DEPFRESCOLIB =  $(ROOT)$(SHLIBDIR)/libFresco.so$(SOFRESCOREV)
FRESCOLIB =  -lFresco

LINTFRESCO =  $(LINTLIBDIR)/llib-lFresco.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV =
DEPXILIB =  $(ROOT)$(SHLIBDIR)/libXi.so$(SOXINPUTREV)
XILIB =  -lXi

LINTXI =  $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

DEPXTESTLIB =  $(ROOT)$(SHLIBDIR)/libXtst.a
XTESTLIB =  -lXtst

LINTXTEST =  $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

DEPPEXLIB =  $(ROOT)$(SHLIBDIR)/libPEX5.a
PEXLIB =  -lPEX5

LINTPEX =  $(LINTLIBDIR)/llib-lPEX5.ln

        XNMBXLIBSRC = $(LIBSRC)/nmbx

SONMBXREV =
DEPXNMBXLIB =  $(ROOT)$(SHLIBDIR)/libXnmbx.so$(SONMBXREV)
XNMBXLIB =  -lXnmbx

LINTXNMBX =  $(LINTLIBDIR)/llib-lXnmbx.ln

        XTRAPLIBSRC = $(LIBSRC)/xtrap

DEPXTRAPLIB =  $(ROOT)$(SHLIBDIR)/libxtrap.a
XTRAPLIB =  -lxtrap

LINTXTRAP =  $(LINTLIBDIR)/llib-lxtrap.ln

        XIELIBSRC = $(LIBSRC)/XIE

DEPXIELIB =  $(ROOT)$(SHLIBDIR)/libXIE.a
XIELIB =  -lXIE

LINTXIE =  $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB =  $(ROOT)$(SHLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS =  $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB =  $(ROOT)$(SHLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD =  $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV =
DEPICELIB =  $(ROOT)$(SHLIBDIR)/libICE.so$(SOICEREV)
ICELIB =  -lICE

LINTICE =  $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV =
DEPSMLIB =  $(ROOT)$(SHLIBDIR)/libSM.so$(SOSMREV)
SMLIB =  -lSM

LINTSM =  $(LINTLIBDIR)/llib-lSM.ln

         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB =  $(ROOT)$(SHLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS =  $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB =  $(ROOT)$(SHLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT =  $(LINTLIBDIR)/llib-lfont.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB =  $(ROOT)$(SHLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE =  $(LINTLIBDIR)/llib-lxkbfile.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

        CONFIGDIR = $(LIBDIR)/config

# -----------------------------------------------------------------------
# start of Imakefile

# $XConsortium: Imakefile,v 1.33 91/07/17 00:48:06 gildea Exp $
#
# Here is an Imakefile for twm.  It depends on having TWMDIR defined
# in Imake.tmpl.  I like to use Imakefiles for everything, and I am sure
# other people do also, so perhaps you could do us all a favor and
# distribute this one.
#

         YFLAGS = -d
        DEPLIBS = $(DEPXMULIB) $(DEPEXTENSIONLIB) $(DEPXLIB)
       LINTLIBS = $(LINTXMU) $(LINTEXTENSIONLIB) $(LINTXLIB)

      XPMLIBDIR =
      XPMINCDIR =

     XPMDEFINES = -DXPM
         XPMLIB = $(XPMLIBDIR) -lXpm

      IMCONVLIB =
   IMCONVLIBDIR =
   IMCONVINCDIR =
  IMCONVDEFINES =

   M4LIBDIR =
   M4INCDIR =
  M4DEFINES =
      M4LIB = $(M4LIBDIR)

     SOUND_LIBS =
 SOUND_INCLUDES =
     SOUND_DEFS =
       SOUNDSRC =
       SOUNDOBJ =

     SESSIONSRC = session.c
     SESSIONOBJ = session.o
      X11R6DEFS = -DX11R6

     I18N_DEFS = -DI18N

LOCAL_LIBRARIES = $(M4LIB) $(IMCONVLIB) $(XPMLIB) $(XMULIB) $(XTOOLLIB) $(XLIB) $(SOUND_LIBS)
        DEFINES = $(SIGNAL_DEFINES) $(M4DEFINES) $(IMCONVDEFINES) $(XPMDEFINES) $(X11R6DEFS) $(SOUND_DEFS)  $(I18N_DEFS)
 EXTRA_INCLUDES = $(M4INCDIR) $(IMCONVINCDIR) $(XPMINCDIR) $(SOUND_INCLUDES)

           SRCS = gram.c lex.c deftwmrc.c add_window.c gc.c list.c ctwm.c \
		parse.c menus.c events.c resize.c util.c version.c iconmgr.c \
		cursor.c icons.c workmgr.c ${SESSIONSRC} ${SOUNDSRC}

           OBJS = gram.o lex.o deftwmrc.o add_window.o gc.o list.o ctwm.o \
		parse.o menus.o events.o resize.o util.o version.o iconmgr.o \
		cursor.o icons.o workmgr.o ${SESSIONOBJ} ${SOUNDOBJ}

  PIXMAPFILES =	xpm/IslandD.xpm        xpm/mail1.xpm          xpm/xgopher.xpm \
		xpm/IslandW.xpm        xpm/nothing.xpm        xpm/xgrab.xpm \
		xpm/LRom.xpm           xpm/pixmap.xpm         xpm/xhpcalc.xpm \
		xpm/LRom1.xpm          xpm/postit.xpm         xpm/xmail.xpm \
		xpm/arthur.xpm         xpm/term.xpm           xpm/xman.xpm \
		xpm/cdrom1.xpm         xpm/unknown.xpm        xpm/xnomail.xpm \
		xpm/claude.xpm         xpm/unread.xpm         xpm/xrn.goodnews.xpm \
		xpm/datebook.xpm       xpm/xarchie.xpm        xpm/xrn.nonews.xpm \
		xpm/emacs.xpm          xpm/xcalc.xpm          xpm/xrn.xpm \
		xpm/hpterm.xpm         xpm/xcalc2.xpm         xpm/xterm.xpm \
		xpm/mail0.xpm          xpm/xedit.xpm          xpm/welcome.xpm \
		xpm/audio_editor.xpm   xpm/clipboard.xpm      xpm/ghostview.xpm \
		xpm/xirc.xpm           xpm/xmosaic.xpm        xpm/unknown1.xpm \
		xpm/xrn-compose.xpm    xpm/gnu-emacs1.xpm     xpm/gnu-emacs2.xpm \
		xpm/gnu-emacs3.xpm     xpm/gnu-emacs4.xpm     xpm/gnu-emacs5.xpm \
		xpm/gnu-emacs6.xpm     xpm/gnu-emacs7.xpm     xpm/skull.xpm \
		xpm/3D_Expand15.xpm    xpm/3D_Iconify15.xpm   xpm/3D_Lightning15.xpm \
		xpm/3D_Menu15.xpm      xpm/3D_Resize15.xpm    xpm/3D_Zoom15.xpm \
		xpm/background8.xpm    xpm/spider.xpm \
		xpm/ball1.xpm    xpm/ball12.xpm   xpm/ball4.xpm    xpm/ball7.xpm \
		xpm/ball10.xpm   xpm/ball2.xpm    xpm/ball5.xpm    xpm/ball8.xpm \
		xpm/ball11.xpm   xpm/ball3.xpm    xpm/ball6.xpm    xpm/ball9.xpm \
		xpm/supman1.xbm   xpm/supman4.xbm   xpm/supman7.xbm \
		xpm/supman2.xbm   xpm/supman5.xbm   xpm/supman8.xbm \
		xpm/supman3.xbm   xpm/supman6.xbm   xpm/supman9.xbm \
		xpm/nt1.xpm   xpm/nt2.xpm xpm/xftp.xpm xpm/welcome.xwd \
		3dcircle.xpm 3ddimple.xpm 3ddot.xpm 3dfeet.xpm 3dleopard.xpm \
		3dpie.xpm 3dpyramid.xpm 3dslant.xpm

.c.o:
	$(CC) $(CFLAGS) -c $*.c

all:: ctwm

parse.o:	parse.c
	 $(RM) $@ && \
	$(CC) $(CFLAGS) '-DSYSTEM_INIT_FILE="'$(DESTDIR)$(TWMDIR)'/system.ctwmrc"' -c $*.c

ctwm.o:	ctwm.c
	 $(RM) $@ && \
	$(CC) $(CFLAGS) '-DPIXMAP_DIRECTORY="'$(DESTDIR)$(TWMDIR)'/images"' -c $*.c

depend:: lex.c gram.c deftwmrc.c

all:: libctwm.a

libctwm.a:  libctwm.o
	 $(RM) $@
	 $(AR) $@  libctwm.o
	 $(_NULLCMD_)
	 $(_NULLCMD_)

        PROGRAM = ctwm

all:: ctwm

ctwm: $(OBJS) $(DEPLIBS)
	  $(RM) $@
	 $(CCLINK) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: ctwm
	 -@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  ctwm $(DESTDIR)$(BINDIR)/ctwm

ctwm.nr.z : ctwm.man
	@if [ -f ctwm.man ]; then \
		$(RM) ctwm.nr ctwm.nr.z && \
		tbl ctwm.man | eqn | nroff -man - > ctwm.nr && \
		pack -f ctwm.nr; \
	fi

install.man:: ctwm.nr.z
	 -@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi; \
	if [ -f ctwm.man ]; then \
		$(INSTALL) -c $(INSTMANFLAGS) \
			ctwm.nr.z $(DESTDIR)$(MANDIR)/ctwm.z; \
	fi

clean::
	$(RM) ctwm.nr ctwm.nr.z

depend::
	 $(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	 $(RM) ctwm

install:: system.ctwmrc
	 -@if [ -d $(DESTDIR)$(TWMDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(TWMDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) system.ctwmrc $(DESTDIR)$(TWMDIR)/system.ctwmrc

install:: xpm
	 -@if [ -d $(DESTDIR)$(TWMDIR)/images ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(TWMDIR)/images); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in xpm/?* ; do \
		(set -x; $(INSTALL) -c $(INSTLIBFLAGS) $$i $(DESTDIR)$(TWMDIR)/images); \
	done

gram.h gram.c: gram.y
	$(YACC) $(YFLAGS) gram.y
	$(MV) y.tab.c gram.c
	$(MV) y.tab.h gram.h

clean::
	$(RM) y.tab.h y.tab.c lex.yy.c gram.h gram.c lex.c deftwmrc.c

deftwmrc.c:  system.ctwmrc
	$(RM) $@
	echo '/* ' >>$@
	echo ' * This file is generated automatically from the default' >>$@
	echo ' * twm bindings file system.ctwmrc by the twm Imakefile.' >>$@
	echo ' */' >>$@
	echo '' >>$@
	echo 'char *defTwmrc[] = {' >>$@
	sed -e '/^#/d' -e 's/"/\\"/g' -e 's/^/    "/' -e 's/$$/",/' \
		system.ctwmrc >>$@
	echo '    (char *) 0 };' >>$@

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	  $(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut   "#"*

Makefile::
	 -@if [ -f Makefile ]; then set -x; \
	 $(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

